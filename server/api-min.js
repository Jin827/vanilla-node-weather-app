const OpenWeatherMapHelper=require("openweathermap-node"),helper=new OpenWeatherMapHelper({APPID:process.env.WEATHER_MAP_API_KEY,units:"metric"}),googleMapsClient=require("@google/maps").createClient({key:process.env.GOOGLE_MAPS_API_KEY,Promise:Promise}),DarkSky=require("dark-sky"),darksky=new DarkSky(process.env.DARKSKY_API_KEY);module.exports={getUserlocation:e=>{const t=e.lat,o=e.lng;return new Promise(function(e,r){return helper.getCurrentWeatherByGeoCoordinates(t,o,(n,a)=>{n?r(Error("Error")):e({cityName:a.name,cityLatitude:t,cityLongitude:o})})}).catch(e=>console.log(e))},getCoordinatesForCity:e=>googleMapsClient.geocode({address:e}).asPromise().then(e=>e.json).then(e=>{const{geometry:t,address_components:o}=e.results[0];return{cityName:o[0].long_name,cityLatitude:t.location.lat,cityLongitude:t.location.lng}}).catch(e=>console.log(e)),getWeatherData:e=>{const{cityName:t,cityLatitude:o,cityLongitude:r}=e;return darksky.options({latitude:o,longitude:r,units:"ca",language:"en",exclude:["minutely","hourly","alerts","flags"]}).get().then(e=>({cityName:t,weather:e.currently,daily:e.daily.data})).catch(e=>console.log(e))}};